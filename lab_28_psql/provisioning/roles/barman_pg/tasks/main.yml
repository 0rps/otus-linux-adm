---
- name: create postgresql user for barman
  become_user: postgres
  postgresql_user:
    name: "{{ postgres_user }}"
    password: "{{ postgres_password }}"
    role_attr_flags: SUPERUSER
- name: "add barman user access(replication)"
  lineinfile:
    line: "host\treplication\t{{ postgres_user }}\t{{ barman_host_ip }}/32\tscram-sha-256"
    dest: "/etc/postgresql/15/main/pg_hba.conf"
- name: "add barman user access(all)"
  lineinfile:
    line: "host\tall\t{{ postgres_user }}\t{{ barman_host_ip }}/32\tscram-sha-256"
    dest: "/etc/postgresql/15/main/pg_hba.conf"
- name: "configure archive_command"
  lineinfile:
    line: "archive_command = 'rsync -a %p barman@{{ barman_host_ip }}:/var/lib/barman/{{ ansible_hostname }}/wals/%f'"
    dest: "/etc/postgresql/15/main/postgresql.conf"
- name: "configure archive_mode"
  lineinfile:
    line: "archive_mode = on"
    dest: "/etc/postgresql/15/main/postgresql.conf"
- name: restart_postgresql
  systemd:
    name: postgresql
    state: restarted
    enabled: yes
- name: generate SSH key for postgres
  user:
    name: postgres
    shell: /bin/bash
    generate_ssh_key: yes
    ssh_key_type: rsa
    ssh_key_bits: 4096
    force: no
- name: fetch postgres public ssh key
  shell: cat /var/lib/postgresql/.ssh/id_rsa.pub
  register: ssh_keys
- name: transfer public key to barman
  delegate_to: "{{ barman_hostname }}"
  authorized_key:
    key: "{{ ssh_keys.stdout }}"
    comment: "{{ ansible_hostname }}"
    user: barman