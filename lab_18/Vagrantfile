# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
:inetRouter => {
        # :public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                ]
  },
  :centralRouter => {
        :tag => "routers",
        :net => [
                   {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                   {ip: '192.168.0.1',   adapter: 3, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                   {ip: '192.168.0.33',  adapter: 5, netmask: "255.255.255.240", virtualbox__intnet: "hw-net"},
                   {ip: '192.168.0.65',  adapter: 7, netmask: "255.255.255.192", virtualbox__intnet: "mgt-net"},
                   {ip: '192.168.255.9', adapter: 4, netmask: "255.255.255.252", virtualbox__intnet: "office1-central"},
                   {ip: '192.168.255.5', adapter: 6, netmask: "255.255.255.252", virtualbox__intnet: "office2-central"},
                  ]
  },
  
  :centralServer => {
    :net => [
               {ip: "192.168.0.2",    adapter: 2, netmask: "255.255.255.240",  virtualbox__intnet: "dir-net"},
               #["192.168.50.12",  8, "255.255.255.0"],
            ]
  },

  :office1Router => {
    :tag => "routers",
    :net => [
                {ip: "192.168.255.10",  adapter: 2,  netmask: "255.255.255.252",  virtualbox__intnet: "office1-central"},
                {ip: "192.168.2.1",     adapter: 3,  netmask: "255.255.255.192",  virtualbox__intnet: "dev1-net"},
                {ip: "192.168.2.65",    adapter: 4,  netmask: "255.255.255.192",  virtualbox__intnet: "test1-net"},
                {ip: "192.168.2.129",   adapter: 5,  netmask: "255.255.255.192",  virtualbox__intnet: "managers-net"},
                {ip: "192.168.2.193",   adapter: 6,  netmask: "255.255.255.192",  virtualbox__intnet: "office1-net"},
                #["192.168.50.20",   8,  "255.255.255.0"],
            ]
  },

  :office1Server => {
    :net => [
                {ip: "192.168.2.130",  adapter: 2,  netmask: "255.255.255.192",  virtualbox__intnet: "managers-net"},
                #["192.168.50.21",  8,  "255.255.255.0"],
            ]
  },

  :office2Router => {
    :tag => "routers",
    :net => [
                {ip: "192.168.255.6",  adapter: 2,  netmask: "255.255.255.252",  virtualbox__intnet: "office2-central"},
                {ip: "192.168.1.1",    adapter: 3,  netmask: "255.255.255.128",  virtualbox__intnet: "dev2-net"},
                {ip: "192.168.1.129",  adapter: 4,  netmask: "255.255.255.192",  virtualbox__intnet: "test2-net"},
                {ip: "192.168.1.193",  adapter: 5,  netmask: "255.255.255.192",  virtualbox__intnet: "office2-net"},
                #["192.168.50.30",  8,  "255.255.255.0"],
            ]
  },

  :office2Server => {
    :net => [
              {ip: "192.168.1.2",    adapter: 2,  netmask: "255.255.255.128",  virtualbox__intnet: "dev2-net"},
              #["192.168.50.31",  8,  "255.255.255.0"],
            ]
  }
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|
    config.vm.define boxname do |box|

        box.vm.box = "ubuntu/mantic64"
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", **ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network("public_network", **boxconfig[:public])
        end
        

        ansible_tag = boxconfig.key?(:tag) ? boxconfig[:tag] : boxname.to_s
        box.vm.provision "shell", inline: <<-SHELL
          apt-get update
          apt-get install ansible -y  

          cd /vagrant
          ansible-playbook -i="#{ansible_tag}," -c local ./playbook.yml
          reboot
        SHELL
        
        # case boxname.to_s
        # when "inetRouter"
        #   box.vm.provision "shell", run: "always", inline: <<-SHELL
        #     sysctl net.ipv4.conf.all.forwarding=1
        #     iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
        #     SHELL
        # when "centralRouter"
        #   box.vm.provision "shell", run: "always", inline: <<-SHELL
        #     sysctl net.ipv4.conf.all.forwarding=1
        #     echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
        #     echo "GATEWAY=192.168.255.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
        #     systemctl restart network
        #     SHELL
        # when "centralServer"
        #   box.vm.provision "shell", run: "always", inline: <<-SHELL
        #     echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
        #     echo "GATEWAY=192.168.0.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
        #     systemctl restart network
        #     SHELL
        # end

      end

  end
  
  
end